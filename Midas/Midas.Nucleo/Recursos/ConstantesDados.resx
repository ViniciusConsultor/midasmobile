<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AtualizarCidade" xml:space="preserve">
    <value>update cidade set nome=@nome, idestado=@idestado where id=@id</value>
  </data>
  <data name="AtualizarEndereco" xml:space="preserve">
    <value>update endereco set logradouro=@logradouro, numero=@numero, bairro=@bairro, codigopostal=@codigopostal,complemento=@complemento,idcidade=@idcidade where id=@id</value>
  </data>
  <data name="AtualizarEstado" xml:space="preserve">
    <value>update estado set nome=@nome,idpais=@idpais where id=@id</value>
  </data>
  <data name="AtualizarPais" xml:space="preserve">
    <value>update pais set nome=@nome where id=@id</value>
  </data>
  <data name="AtualizarPessoaJuridica" xml:space="preserve">
    <value>update pessoajuridica set cnpj = @cnpj, nomefantasia = @nomefantasia, idendereco=@idendereco where id = @id</value>
  </data>
  <data name="ExcluirCidade" xml:space="preserve">
    <value>delete from cidade where id=@id</value>
  </data>
  <data name="ExcluirEndereco" xml:space="preserve">
    <value>delete from endereco where id = @id</value>
  </data>
  <data name="ExcluirEstado" xml:space="preserve">
    <value>delete from estado where id =@id</value>
  </data>
  <data name="ExcluirPais" xml:space="preserve">
    <value>delete from pais where id=@id</value>
  </data>
  <data name="ExcluirPessoaJuridica" xml:space="preserve">
    <value>delete from pessoajuridica where id = @id</value>
  </data>
  <data name="InserirCidade" xml:space="preserve">
    <value>insert into cidade (nome,idestado) values (@nome,@idestado)</value>
  </data>
  <data name="InserirEndereco" xml:space="preserve">
    <value>insert into endereco (logradouro,numero,bairro,codigopostal,complemento,idcidade) values (@logradouro,@numero,@bairro,@codigopostal,@complemento,@idcidade)</value>
  </data>
  <data name="InserirEstado" xml:space="preserve">
    <value>insert into estado (nome,idpais) values (@nome,@idpais)</value>
  </data>
  <data name="InserirPais" xml:space="preserve">
    <value>insert into pais(nome) values (@nome)</value>
  </data>
  <data name="InserirPessoaJuridica" xml:space="preserve">
    <value>insert into pessoajuridica (cnpj,nomefantasia,idendereco) values (@cnpj,@nomefantasia,@idendereco)</value>
  </data>
  <data name="SelecionarCidade" xml:space="preserve">
    <value>select id,nome,idestado from cidade where id=@id</value>
  </data>
  <data name="SelecionarEndereco" xml:space="preserve">
    <value>select * from endereco where id=@id</value>
  </data>
  <data name="SelecionarEstado" xml:space="preserve">
    <value>select id,nome,idpais from estado where id=@id</value>
  </data>
  <data name="SelecionarPais" xml:space="preserve">
    <value>select id, nome from pais where id = @id</value>
  </data>
  <data name="SelecionarPessoaJuridica" xml:space="preserve">
    <value>select * from pessoajuridica where id = @id</value>
  </data>
  <data name="SelecionarTodasCidades" xml:space="preserve">
    <value>select id,nome,idestado from cidade order by nome</value>
  </data>
  <data name="SelecionarTodasPessoasJuridicas" xml:space="preserve">
    <value>select * from pessoajuridica order by nomefantasia</value>
  </data>
  <data name="SelecionarTodosEnderecos" xml:space="preserve">
    <value>select * from endereco order by logradouro</value>
  </data>
  <data name="SelecionarTodosEstados" xml:space="preserve">
    <value>select id,nome,idpais from estado order by nome</value>
  </data>
  <data name="SelecionarTodosPaises" xml:space="preserve">
    <value>select id,nome from pais order by nome</value>
  </data>
  <data name="TabelaCidade" xml:space="preserve">
    <value>create table cidade (id int identity(1,1) not null primary key, nome nvarchar(255), idestado int)</value>
  </data>
  <data name="TabelaEndereco" xml:space="preserve">
    <value>create table endereco (id int identity (1,1) not null primary key, logradouro nvarchar(255), numero nvarchar(10), bairro nvarchar(255), codigopostal nvarchar(50), complemento nvarchar(255), idcidade int)</value>
  </data>
  <data name="TabelaEstado" xml:space="preserve">
    <value>create table estado (id int identity(1,1) not null primary key, nome nvarchar(255), idpais int)</value>
  </data>
  <data name="TabelaPais" xml:space="preserve">
    <value>create table pais (id int identity(1,1) not null primary key, nome nvarchar(255))</value>
  </data>
  <data name="TabelaPessoaJuridica" xml:space="preserve">
    <value>create table pessoajuridica (id int identity(1,1) not null primary key, cnpj nvarchar(20), nomefantasia nvarchar(255),idendereco int)</value>
  </data>
</root>